-- Step 1: Create the BOOKS_AUD audit table
CREATE TABLE BOOKS_AUD (
    EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
    EVENT_DATE DATETIME NOT NULL,
    EVENT_TYPE VARCHAR(10) DEFAULT NULL,
    BOOK_ID INT(11) NOT NULL,
    OLD_TITLE VARCHAR(255),
    NEW_TITLE VARCHAR(255),
    OLD_PUBYEAR INT(4),
    NEW_PUBYEAR INT(4),
    PRIMARY KEY (EVENT_ID)
);

-- Step 2: Create the READERS_AUD audit table
CREATE TABLE READERS_AUD (
    EVENT_ID INT(11) NOT NULL AUTO_INCREMENT,
    EVENT_DATE DATETIME NOT NULL,
    EVENT_TYPE VARCHAR(10) DEFAULT NULL,
    READER_ID INT(11) NOT NULL,
    OLD_NAME VARCHAR(255),
    NEW_NAME VARCHAR(255),
    OLD_FIRSTNAME VARCHAR(255),
    NEW_FIRSTNAME VARCHAR(255),
    OLD_LASTNAME VARCHAR(255),
    NEW_LASTNAME VARCHAR(255),
    OLD_PESELID VARCHAR(20),
    NEW_PESELID VARCHAR(20),
    PRIMARY KEY (EVENT_ID)
);

-- Step 3: Create triggers for the BOOKS table

DELIMITER $$

-- AFTER INSERT Trigger
CREATE TRIGGER BOOKS_INSERT AFTER INSERT ON BOOKS
FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, NEW_TITLE, NEW_PUBYEAR)
    VALUES (CURTIME(), 'INSERT', NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR);
END $$

-- AFTER DELETE Trigger
CREATE TRIGGER BOOKS_DELETE AFTER DELETE ON BOOKS
FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, OLD_TITLE, OLD_PUBYEAR)
    VALUES (CURTIME(), 'DELETE', OLD.BOOK_ID, OLD.TITLE, OLD.PUBYEAR);
END $$

-- AFTER UPDATE Trigger
CREATE TRIGGER BOOKS_UPDATE AFTER UPDATE ON BOOKS
FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, BOOK_ID, OLD_TITLE, NEW_TITLE, OLD_PUBYEAR, NEW_PUBYEAR)
    VALUES (CURTIME(), 'UPDATE', OLD.BOOK_ID, OLD.TITLE, NEW.TITLE, OLD.PUBYEAR, NEW.PUBYEAR);
END $$

DELIMITER ;

-- Step 4: Create triggers for the READERS table

DELIMITER $$

-- AFTER INSERT Trigger
CREATE TRIGGER READERS_INSERT AFTER INSERT ON READERS
FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, NEW_NAME, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID)
    VALUES (CURTIME(), 'INSERT', NEW.READER_ID, NEW.NAME, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID);
END $$

-- AFTER DELETE Trigger
CREATE TRIGGER READERS_DELETE AFTER DELETE ON READERS
FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, OLD_NAME, OLD_FIRSTNAME, OLD_LASTNAME, OLD_PESELID)
    VALUES (CURTIME(), 'DELETE', OLD.READER_ID, OLD.NAME, OLD.FIRSTNAME, OLD.LASTNAME, OLD.PESELID);
END $$

-- AFTER UPDATE Trigger
CREATE TRIGGER READERS_UPDATE AFTER UPDATE ON READERS
FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, READER_ID, OLD_NAME, NEW_NAME, OLD_FIRSTNAME, NEW_FIRSTNAME, OLD_LASTNAME, NEW_LASTNAME, OLD_PESELID, NEW_PESELID)
    VALUES (CURTIME(), 'UPDATE', OLD.READER_ID, OLD.NAME, NEW.NAME, OLD.FIRSTNAME, NEW.FIRSTNAME, OLD.LASTNAME, NEW.LASTNAME, OLD.PESELID, NEW.PESELID);
END $$

DELIMITER ;
